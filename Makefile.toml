[env]
RUST_BACKTRACE = "1"

[tasks.style]
description = "Style check on code"
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks.analyze]
description = "Run analysis on code"
command = "cargo"
args = ["clippy", "--all-targets"]

[tasks.check]
description = "Fast compiles"
command = "cargo"
args = ["check", "--all-targets"]

[tasks.build]
description = "Builds native release binary"
command = "cargo"
args = ["build", "--release", "--locked"]

[tasks.test]
description = "Tests package"
command = "cargo"
args = ["test", "--all"]

[tasks.release]
description = "Runs release steps"
dependencies = ["style", "analyze", "check", "build", "test"]

[tasks.clean-wasm]
description = "Cleans wasm artifacts"
script = '''
rm -Rf target/wasm-web/*
rm -Rf docs/*
rm -Rf www/dist/*
'''

[tasks.build-wasm]
description = "Builds WASM binary"
install_crate = "wasm-bindgen-cli"
command = "wasm-pack"
args = ["build", "--out-dir", "target/wasm-web/"]
dependencies = ["clean-wasm"]

[tasks.npm-install]
description = "Rebuilds www"
script = '''
cd www 
npm install
'''

[tasks.serve]
description = "Uses NPM to serve WASM in reload mode"
script = '''
cd docs
python -m http.server
'''
dependencies = ["npm-install"]

[tasks.npm-build]
description = "Rebuilds github pages"
script = '''
cd www
npm run build
'''
dependencies = ["npm-install"]

[tasks.deploy]
description = "Rebuilds github pages"
script = '''
mkdir -p docs
cp -Rf www/dist/* docs/
'''
dependencies = ["clean-wasm", "build-wasm", "npm-build"]

